#
#   /$$$$$$
#  /$$__  $$
# | $$  \__/  /$$$$$$  /$$$$$$$   /$$$$$$   /$$$$$$
# |  $$$$$$  /$$__  $$| $$__  $$ |____  $$ /$$__  $$
#  \____  $$| $$  \ $$| $$  \ $$  /$$$$$$$| $$  \__/
#  /$$  \ $$| $$  | $$| $$  | $$ /$$__  $$| $$
# |  $$$$$$/|  $$$$$$/| $$  | $$|  $$$$$$$| $$
#  \______/  \______/ |__/  |__/ \_______/|__/
#
# Нуждаете се от помощ или имате въпроси? https://jonesdev.xyz/discord
# Изходен код: https://github.com/jonesdevelopment/sonar
# Авторски права Jones Development и сътрудници на Sonar, лицензирани под GPL-3.0
#

# Общи настройки за Sonar
general:
  # Трябва ли Sonar автоматично да проверява за нови актуализации?
  # Sonar използва GitHub API, за да провери дали текущата версия е остаряла
  check-for-updates: true
  # Трябва ли Sonar да записва IP адресите на играчите в конзолата?
  log-player-addresses: true
  # Максимален брой играчи онлайн със същия IP адрес
  max-online-per-ip: 3

# Настройки за чувствителност на тракера за атаки
# Редактирайте това само ако знаете какво правите
attack-tracker:
  # Минимален брой нови играчи за откриване на атака
  min-players-for-attack: 8
  # Времето, което трябва да мине, за да се счита една атака за приключена
  # (Тази стойност представлява времето в милисекунди: 1 секунда = 1000 милисекунди)
  min-attack-duration: 30000
  # Брой пъти, в който инцидент трябва да бъде докладван, за да се признае за атака
  # Тази стойност действа като буфер за филтриране на фалшиви уведомления за атаки
  min-attack-threshold: 2
  # Времето, което трябва да мине, за да се открие нова атака
  # (Тази стойност представлява времето в милисекунди: 1 секунда = 1000 милисекунди)
  attack-cooldown-delay: 3000

# Можете да свържете Sonar с база данни, за да запазите проверените играчи дори след рестартиране на сървъра
# Забележка: IP адресите се съхраняват в обикновен текст. Вие сте отговорни за безопасността на вашата база данни!
database:
  # Тип на базата данни, която Sonar използва за съхранение на проверените играчи
  # Възможни типове: NONE, MYSQL, MARIADB, H2
  type: NONE
  # Файл в директорията на плъгина на Sonar, използван за базата данни H2
  filename: verified_players
  # Адрес на хоста за удостоверяване със SQL базата данни
  host: localhost
  # Порт за удостоверяване със SQL базата данни
  port: 3306
  # Име на SQL датабазата
  name: sonar
  # Потребителско име за удостоверяване със SQL датабазата
  username: ''
  # Парола за удостоверяване със SQL датабазата
  password: ''
  # Колко дни трябва Sonar да съхранява проверените играчи в датабазата?
  maximum-age: 5

# Всяко ново искане за влизане ще бъде поставено на опашка, за да се избегнат спам атаки
# Опашката има лимит, за да предотврати претоварване на сървъра
queue:
  # Максимален брой разрешени заявки в опашка за 1 секунда
  max-polls: 30

# Всеки нов играч, който се присъедини за първи път, ще бъде изпратен в
# лек limbo сървър, където се извършват разширени проверки на ботове
verification:
  # Кога Sonar трябва да проверява нови играчи?
  # Възможни типове: ALWAYS (Винаги), DURING_ATTACK (По време на атака), NEVER (Никога)
  # - ALWAYS: Новите играчи винаги ще бъда проверявани (Препоръчително)
  # - DURING_ATTACK: Новите играчи ще бъдат проверявани само ако има действаща атака
  # - NEVER: Новите играчи никога няма да бъдат проверявани
  timing: ALWAYS
  checks:
    # Проверява дали падащото движение на играчите следва гравитационната формула на Minecraft
    # Всички предвидени движения са предварително изчислени, за да се запази производителността
    gravity:
      # Трябва ли Sonar да проверява за валидна клиентска гравитация? (препоръчително)
      enabled: true
      # Трябва ли Sonar да проверява дали играчът се сблъсква с блокове? (препоръчително)
      check-collisions: true
      # Трябва ли Sonar да накара играча да реши CAPTCHA, ако не премине гравитационната проверка?
      captcha-on-fail: false
      # MМаксимален брой отметки, които играчът трябва да падне, за да може да удари платформата
      max-movement-ticks: 8
      # Геймодът на играча по време на проверка
      # Възможни типове: SURVIVAL, CREATIVE, ADVENTURE
      # - SURVIVAL: всички компоненти на потребителския интерфейс са видими
      # - CREATIVE: здравето и глада са скрити
      # - ADVENTURE: всички компоненти на потребителския интерфейс са видими
      gamemode: ADVENTURE

    # Проверява дали клиентът изпраща правилни пакети при монтиране на превозно средство
    vehicle:
      # Възможни типове: ALWAYS, DURING_ATTACK, NEVER
      # - ALWAYS: Новите играчи винаги ще бъдат монтирани на превозно средство (препоръчително)
      # - DURING_ATTACK: Новите играчи ще бъдат качени на превозно средство само по време на атака
      # - NEVER: Нови играчи никога няма да бъдат монтирани на превозно средство
      timing: ALWAYS

    # Накарайте играча да въведе код от виртуална карта в чата
    map-captcha:
      # Кога Sonar трябва да накара играча да реши CAPTCHA?
      # Възможни типове: ALWAYS, DURING_ATTACK, NEVER
      # - ALWAYS: Новите играчи винаги ще получават CAPTCHA
      # - DURING_ATTACK: Новите играчи ще получават само CAPTCHA по време на атака
      # - NEVER: Новите играчи никога няма да получат CAPTCHA (препоръчително)
      timing: NEVER
      # Опции за ефектите върху изображението, показвано на плейъра
      # Редактирайте това само ако знаете какво правите
      effects:
        # Добавя произволни линии към изображението
        scratches: true
        # Прилага пулсиращ филтър (вълнообразен ефект)
        ripple: true
        # Прилага филтър за изпъкналост (изострен текст)
        bump: true
        # Филтър за изкривяване
        distortion:
          # Трябва ли Sonar да приложи филтър за изкривяване?
          enabled: true
          # Каква форма трябва да използва Sonar за филтъра за изкривяване?
          # Възможни типове: 0, 1, 2, 3
          # - 0: Кръстове
          # - 1: Линии
          # - 2: Кръгове
          # - 3: Квадрати
          shape: 2
          # Разстояние между изкривени пиксели/обекти
          distance: 5
          # Плътност на изкривените пиксели/обекти
          density: 0.1
          # Степента на преливане между цветовете на обектите
          mix: 0.15
      # Път до фоновото изображение, което Sonar използва за CAPTCHA
      # Ако изображението не бъде намерено, шумът ще се използва като фон по подразбиране
      # Можете да поставите името на файла тук, ако файлът е в директорията на плъгина
      background: ''
      # Трябва ли Sonar автоматично да разпознава цвета на фона?
      # Това се прави, за да се създаде контраст между фоновото изображение и текста
      # Ако това е деактивирано, Sonar ще използва произволен градиент за цветовете
      auto-color: false
      # Колко отговора трябва да подготви Sonar?
      # Тази задача се изпълнява асинхронно във фонов режим
      precompute: 500
      # Колко време трябва да чака Sonar, докато играчът не успее да изпълни CAPTCHA?
      # (Тази стойност представлява времето в милисекунди: 1 секунда = 1000 милисекунди)
      max-duration: 30000
      # Колко пъти играчът трябва да се провали на CAPTCHA, преди да се провали на проверката?
      max-tries: 3
      # Знаци (букви и цифри), които могат да се появяват в отговора на CAPTCHA
      # Не се препоръчва добавянето на цифри или букви, които може да си приличат една с друга
      dictionary: '1235689'

    # Проверява дали играчите изпращат валидна клиентска марка към сървъра
    client-brand:
      # Трябва ли Sonar да проверява за валидни клиентски марки? (препоръчително)
      enabled: true
      # Regex за валидиране на клиентски марки по време на проверка
      valid-regex: ^[!-~ ]+$
      # Максимална дължина на клиентската марка по време на проверката
      max-length: 64

    # Регулярен израз за валидиране на потребителски имена по време на проверка
    valid-name-regex: ^[a-zA-Z0-9_]+$
    # Регулярен израз за валидиране на локала на клиента по време на проверка
    valid-locale-regex: ^[a-zA-Z_]+$
    # Ping, който играча трябва да има за да бъде таймаут
    # (Тази стойност представлява времето в милисекунди: 1 секунда = 1000 милисекунди)
    max-ping: 10000
    # Максимален брой пакети за влизане, които играчът трябва да изпрати, за да бъде изхвърлен
    max-login-packets: 256

  # Ако е активирано, играчът ще бъде прехвърлен обратно към първоначалния сървър
  # след успешно преминаване на проверката за бот.
  # Тази функция е въведена от Mojang във версия 1.20.5 на Minecraft
  transfer: 
    # Трябва ли Sonar да прехвърли играча към първоначалния сървър (вместо да ги изхвърля)?
    # За да работи това, трябва да активирате функцията в конфигурацията на вашия сървър
    # Освен това може да искате да намалите размера на ограничаването на честотата на влизане
    # изпълнявано от Velocity или други проксита/плъгини, тъй като това може да попречи на
    # играч да е прехвърлен правилно.
    enabled: false
    # Към кой сървър Sonar трябва да прехвърли играча, когато проверката премине?
    # Моля, въведете IP адреса на сървъра, който се използва от играчите за нормално свързване към вашия сървър.
    # Например можете да поставите "mc.hypixel.net" или директен IP като "1.1.1.1"
    destination-host: "play.my-server.com"
    # Кой порт трябва да използва Sonar, когато прехвърля плейъра към първоначалния сървър?
    # Ако вашият сървър не се нуждае от порт за свързване, можете да оставите това като 25565.
    destination-port: 25565

  # Трябва ли Sonar да регистрира нови опити за проверка?
  log-connections: true
  # Трябва ли Sonar да регистрира нови опити за проверка по време на атаки?
  log-during-attack: false
  # Should Sonar log every single movement/position change during verification?
  # This is not recommended for production servers but can be helpful for spotting errors.
  debug-xyz-positions: false
  # Should Sonar also check Geyser (Bedrock) players?
  # This feature is experimental and might cause issues
  # If this is disabled, Bedrock players will be skipped
  check-geyser-players: true
  # The time since the player stopped sending packets before disconnecting
  # (This value represents the time in milliseconds: 1 second = 1000 milliseconds)
  read-timeout: 8000
  # The time since the server stopped sending packets before disconnecting the player
  # (This value represents the time in milliseconds: 1 second = 1000 milliseconds)
  write-timeout: 10000
  # How long should a player wait before reconnecting during verification
  # (This value represents the time in milliseconds: 1 second = 1000 milliseconds)
  rejoin-delay: 8000
  # How long should Sonar remember the number of failed verifications for a player?
  # (This value represents the time in milliseconds: 1 second = 1000 milliseconds)
  remember-time: 120000
  # How long should an IP address be denied from logging in when failing the verification too often?
  # (This value represents the time in milliseconds: 1 second = 1000 milliseconds)
  blacklist-time: 600000
  # How often does a player have to fail the verification in order to be blacklisted?
  # (Set this value to 0 to disable the blacklist entirely)
  blacklist-threshold: 2
  # List of protocol IDs which are not checked by Sonar (verification bypass)
  # You can find the full list of all protocol IDs here:
  # https://wiki.vg/Protocol_version_numbers
  # For example, Minecraft 1.20 has the ID 763.
  whitelisted-protocols: []
  # List of protocol IDs which are unable to join the server at all
  blacklisted-protocols: []
